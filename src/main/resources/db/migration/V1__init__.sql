CREATE TABLE address
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    direccion       VARCHAR(255),
    numero_exterior INTEGER,
    numero_interior INTEGER,
    colonia         VARCHAR(255),
    cp              VARCHAR(255),
    localidad       VARCHAR(255),
    municipio       VARCHAR(255),
    estado          VARCHAR(255),
    CONSTRAINT pk_address PRIMARY KEY (id)
);

CREATE TABLE attendance
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    type_attendance SMALLINT,
    date            TIMESTAMP WITHOUT TIME ZONE,
    user_id         BIGINT                                  NOT NULL,
    CONSTRAINT pk_attendance PRIMARY KEY (id)
);

CREATE TABLE classrooms
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name        VARCHAR(20),
    description VARCHAR(50),
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_classrooms PRIMARY KEY (id)
);

CREATE TABLE course_students
(
    course_id  BIGINT NOT NULL,
    student_id BIGINT NOT NULL
);

CREATE TABLE courses
(
    id              BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name            VARCHAR(50)                             NOT NULL,
    created_at      TIMESTAMP WITHOUT TIME ZONE,
    updated_at      TIMESTAMP WITHOUT TIME ZONE,
    manager_user_id BIGINT,
    cycle_id        BIGINT                                  NOT NULL,
    classroom_id    BIGINT,
    CONSTRAINT pk_courses PRIMARY KEY (id)
);

CREATE TABLE cycles
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name       VARCHAR(20),
    created_at TIMESTAMP WITHOUT TIME ZONE,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    closed_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_cycles PRIMARY KEY (id)
);

CREATE TABLE grade_details
(
    id             BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    grade_id       BIGINT,
    student_id     BIGINT,
    score          DOUBLE PRECISION                        NOT NULL,
    created_at     TIMESTAMP WITHOUT TIME ZONE,
    updated_at     TIMESTAMP WITHOUT TIME ZONE,
    deleted_at     TIMESTAMP WITHOUT TIME ZONE,
    delete_comment VARCHAR(255),
    CONSTRAINT pk_grade_details PRIMARY KEY (id)
);

CREATE TABLE grades
(
    id          BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    subject_id  BIGINT,
    description VARCHAR(255),
    created_at  TIMESTAMP WITHOUT TIME ZONE,
    updated_at  TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT pk_grades PRIMARY KEY (id)
);

CREATE TABLE licenciatura
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name VARCHAR(255),
    code SMALLINT,
    CONSTRAINT pk_licenciatura PRIMARY KEY (id)
);

CREATE TABLE roles
(
    role_id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    authority VARCHAR(255),
    CONSTRAINT pk_roles PRIMARY KEY (role_id)
);

CREATE TABLE students
(
    id                                BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    matricula                         VARCHAR(7),
    status_alumno                     VARCHAR(255),
    user_id                           BIGINT,
    nombre                            VARCHAR(255),
    apellido_paterno                  VARCHAR(255),
    apellido_materno                  VARCHAR(255),
    licenciatura_id                   BIGINT,
    curp                              VARCHAR(255),
    nacionalidad                      VARCHAR(255),
    sexo                              VARCHAR(255),
    tipo_sangre                       VARCHAR(255),
    estado_civil                      SMALLINT,
    telefono                          VARCHAR(255),
    celular                           VARCHAR(255),
    ingreso_mensual                   VARCHAR(255),
    institucion_procedencia           VARCHAR(255),
    institucion_procedencia_estado    VARCHAR(255),
    institucion_procedencia_municipio VARCHAR(255),
    correo_personal                   VARCHAR(255),
    correo_escolar                    VARCHAR(255),
    direccion_id                      BIGINT,
    nss                               VARCHAR(255),
    CONSTRAINT pk_students PRIMARY KEY (id)
);

CREATE TABLE subject_schedules
(
    id         BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    subject_id BIGINT,
    week_day   INTEGER,
    start_time time WITHOUT TIME ZONE                  NOT NULL,
    end_time   time WITHOUT TIME ZONE                  NOT NULL,
    CONSTRAINT pk_subject_schedules PRIMARY KEY (id)
);

CREATE TABLE subjects
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    name         VARCHAR(50),
    course_id    BIGINT                                  NOT NULL,
    classroom_id BIGINT                                  NOT NULL,
    teacher_id   BIGINT                                  NOT NULL,
    CONSTRAINT pk_subjects PRIMARY KEY (id)
);

CREATE TABLE teachers
(
    id                 BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    nombre             VARCHAR(255),
    apellido_paterno   VARCHAR(255),
    apellido_materno   VARCHAR(255),
    user_id            BIGINT,
    rfc                VARCHAR(255),
    curp               VARCHAR(18),
    cedula_profesional VARCHAR(255),
    status_docente     VARCHAR(255),
    grado_estudios     VARCHAR(255),
    area_conocimientos VARCHAR(255),
    fecha_nacimiento   TIMESTAMP WITHOUT TIME ZONE,
    nacionalidad       VARCHAR(255),
    fecha_baja         TIMESTAMP WITHOUT TIME ZONE,
    sexo               VARCHAR(255),
    estado_civil       VARCHAR(255),
    tipo_sangre        VARCHAR(255),
    correo_personal    VARCHAR(255),
    correo_escolar     VARCHAR(255),
    direccion_id       BIGINT,
    CONSTRAINT pk_teachers PRIMARY KEY (id)
);

CREATE TABLE token
(
    id           BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    token        VARCHAR(255),
    created_at   TIMESTAMP WITHOUT TIME ZONE,
    expires_at   TIMESTAMP WITHOUT TIME ZONE,
    validated_at TIMESTAMP WITHOUT TIME ZONE,
    user_id      BIGINT                                  NOT NULL,
    CONSTRAINT pk_token PRIMARY KEY (id)
);

CREATE TABLE user_role_function
(
    role_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    CONSTRAINT pk_user_role_function PRIMARY KEY (role_id, user_id)
);

CREATE TABLE users
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    username VARCHAR(255),
    email    VARCHAR(255),
    password VARCHAR(255),
    CONSTRAINT pk_users PRIMARY KEY (user_id)
);

ALTER TABLE licenciatura
    ADD CONSTRAINT uc_licenciatura_code UNIQUE (code);

ALTER TABLE students
    ADD CONSTRAINT uc_students_curp UNIQUE (curp);

ALTER TABLE students
    ADD CONSTRAINT uc_students_direccion UNIQUE (direccion_id);

ALTER TABLE students
    ADD CONSTRAINT uc_students_user UNIQUE (user_id);

ALTER TABLE teachers
    ADD CONSTRAINT uc_teachers_curp UNIQUE (curp);

ALTER TABLE teachers
    ADD CONSTRAINT uc_teachers_direccion UNIQUE (direccion_id);

ALTER TABLE teachers
    ADD CONSTRAINT uc_teachers_rfc UNIQUE (rfc);

ALTER TABLE teachers
    ADD CONSTRAINT uc_teachers_user UNIQUE (user_id);

ALTER TABLE token
    ADD CONSTRAINT uc_token_token UNIQUE (token);

ALTER TABLE users
    ADD CONSTRAINT uc_users_email UNIQUE (email);

ALTER TABLE users
    ADD CONSTRAINT uc_users_username UNIQUE (username);

ALTER TABLE attendance
    ADD CONSTRAINT FK_ATTENDANCE_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE courses
    ADD CONSTRAINT FK_COURSES_ON_CLASSROOM FOREIGN KEY (classroom_id) REFERENCES classrooms (id);

ALTER TABLE courses
    ADD CONSTRAINT FK_COURSES_ON_CYCLE FOREIGN KEY (cycle_id) REFERENCES cycles (id);

ALTER TABLE courses
    ADD CONSTRAINT FK_COURSES_ON_MANAGER_USER FOREIGN KEY (manager_user_id) REFERENCES teachers (id);

ALTER TABLE grades
    ADD CONSTRAINT FK_GRADES_ON_SUBJECT FOREIGN KEY (subject_id) REFERENCES subjects (id);

ALTER TABLE grade_details
    ADD CONSTRAINT FK_GRADE_DETAILS_ON_GRADE FOREIGN KEY (grade_id) REFERENCES grades (id);

ALTER TABLE grade_details
    ADD CONSTRAINT FK_GRADE_DETAILS_ON_STUDENT FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_DIRECCION FOREIGN KEY (direccion_id) REFERENCES address (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_LICENCIATURA FOREIGN KEY (licenciatura_id) REFERENCES licenciatura (id);

ALTER TABLE students
    ADD CONSTRAINT FK_STUDENTS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE subjects
    ADD CONSTRAINT FK_SUBJECTS_ON_CLASSROOM FOREIGN KEY (classroom_id) REFERENCES classrooms (id);

ALTER TABLE subjects
    ADD CONSTRAINT FK_SUBJECTS_ON_COURSE FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE subjects
    ADD CONSTRAINT FK_SUBJECTS_ON_TEACHER FOREIGN KEY (teacher_id) REFERENCES teachers (id);

ALTER TABLE subject_schedules
    ADD CONSTRAINT FK_SUBJECT_SCHEDULES_ON_SUBJECT FOREIGN KEY (subject_id) REFERENCES subjects (id);

ALTER TABLE teachers
    ADD CONSTRAINT FK_TEACHERS_ON_DIRECCION FOREIGN KEY (direccion_id) REFERENCES address (id);

ALTER TABLE teachers
    ADD CONSTRAINT FK_TEACHERS_ON_USER FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE token
    ADD CONSTRAINT FK_TOKEN_ON_USERID FOREIGN KEY (user_id) REFERENCES users (user_id);

ALTER TABLE course_students
    ADD CONSTRAINT fk_coustu_on_course FOREIGN KEY (course_id) REFERENCES courses (id);

ALTER TABLE course_students
    ADD CONSTRAINT fk_coustu_on_student FOREIGN KEY (student_id) REFERENCES students (id);

ALTER TABLE user_role_function
    ADD CONSTRAINT fk_userolfun_on_role FOREIGN KEY (role_id) REFERENCES roles (role_id);

ALTER TABLE user_role_function
    ADD CONSTRAINT fk_userolfun_on_user FOREIGN KEY (user_id) REFERENCES users (user_id);